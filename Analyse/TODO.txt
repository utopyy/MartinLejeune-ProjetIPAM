Projet:
1) Analyse USE CASE ET UML
2) Créer la DB
3)Faire la base bootstrap du site
4) Implémenter les articles dans la bdd
5) Etablir connexion DB - Site
6) Implémenter sign in
7) empecher user de mettre 2x la meme adresse
8) Modifier date création
9) Implémentation adresse
10) Charger les articles sur le site
11) catégories avec un espace ne fonctionnent pas - réparé!
12) affichage shop par défaut 
13) login ok
14) Implémentation session/routeur ok
15) Implémenter modèle MVC
16) modifier photo pour sign in
17) fichier users.php : refaire proprement les méthodes : les adapter à ma bdd
18) config php pour parametrer rapidement la connexion db etc
19) check le code before review
20) check doc : diagramme bdd
21) probleme affichage sidebar article
22) afficher nom de l'utilisateur en haut à droite lors de la navigation sur le site
23) Boutton déconnexion
24) refaire dump_url : avec users présents
25) préparer le readme
26) adapter l'affichage selon le fait qu'on soit connecté ou pas
27) Si inscription : on passe en statut connexion!
28) Traiter affichage d'articles en fonction du status de l'user
29) administrer les user
30) design admin user
31) dump mysql mis à jour
32) Delete article
33) ajout article
34) prévisualiser article
35) modifier article
36) visualiser panier
36) ajout panier en ligne (ajouter un article dedans)
37) pouvoir supprimer un article (ajouter une colonne)
38) calculer le prix
39) ajouter les articles identiques sur la meme ligne
40) Transformer panier en MVC
41) adapter le caddie (navbar, accès only user)
42) valider une commande
43) visualiser son historique de commandes
44) Visualiser l'ensemble des commandes
45) graphique pour l'admin des articles les plus vendus etc
46) visualiser son profil
47) Modifier ses données
48) Admin redirigé vers modification user (réinitialisation du mot de passe, changer l'adresse mail, mettre le role admin)
49) si user supprimé (on désactive l'user :> boolean db, au lieu de delete adresse etc)
50) idem avec article
51) Les URL : controller qui vérifie: redirection bonne page ou welcome
52) modification aerticle : réussir à faire un select (js) (et implémenter modif article:changer de categorie)
53) creation aerticle : réussir à faire un select (js)
54) url des articles en minuscules
55) ne pas ajouter un article dont le nom existe déjà (meme en status supprimé)
56) nom des articles créés en majuscule
57) photo pour article: (envoyer la photo directement dans le bon répertoire)
58) modif image: supprimer image d'avant et recréer une nouvelle
59) correction update/creation article
60) sanitize update article
61) ne pas créer un user si il existe déjà (meme en status supprimé!)
62) ettre à jour dernière connection
63) bouton ajouter panier welcome (user)
64) si déconnection avec panier pas valider mettre une alerte
=============

Restant: 

57) reduire taille image prévisu article


55) ajouter confirmation pour supprimer les éléments(article, user,confirmer etc etc etc)
61) Footer newsletter!
62) validation formulaire javascript (pas d'espaces extra)
62) check panier model/controller : functions inutiles?

52) Listing commandes total, users, article : appeler javascript pour mettre un nombre de coms max par page ( et trier par champ) : https://www.creative-tim.com/product/fresh-bootstrap-table?partner=114912
53) fusionner un max de views/controllers
54) global db? (voir discord juju)

(!!!) Améliorer graphique
Implémenter encore un peu de js (niveau alertes et formulaire il y a moyen de faire qlq chose de sympa)

========
Avant dernier push
- Indenter le code
- Refaire dump mysql
- Check erreurs/warning console
- Review code complet (pas oublié mon javascript) => tout comprendre à 100%!
- Différence entre require_once / require (à recheck pour être sûr)
- Index a été modifié plusieurs fois par le prof: retourner sur discord pour s'assurer d'avoir compris toutes les modifs
- Update readme


Readme: "Un article supprimé reste dans la db (champ delete = 1), comme les utilisateurs, un nouvel article peut être recréé avec le même nom que l'article "supprimé". 
Si vous modifiez le status d'un article supprimé, merci de vérifier qu'un autre article portant le même nom n'a pas été créé entre temps et au besoin, modifier le nom de l'ancien ou du nouvel article."

"Les images sont redimensionnées et peuvent être de mauvaise qualité, pour bien faire il faudrait qu'une image possède (en db) une photo pour sa prévisualitation et une photo pour sa miniature"
" Des images de même largeur et hauteur sont disponibles dans un le dossier public>img>imgs_test dans le cas où vous voudriez tester l'ajout ou la modification d'une image liée à un article."


